name: build-sign-image
on:
  push:
    paths:
      - Dockerfile
      - .github/workflows/publish-sign.yml
  workflow_dispatch:

permissions:
  id-token: write        # OIDC para Cosign keyless
  packages: write        # push a GHCR
  contents: read

env:
  IMAGE_NAME: ghcr.io/genaoking/nornir-demo

jobs:
  build-sign:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout
    - uses: actions/checkout@v4

    # 2. Log-in to GHCR
    - name: Login to GHCR
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    # 3. Build image (pasa el build-arg explícitamente)
    - name: Extract short SHA
      id: vars
      run: echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

    - name: Build image
      run: docker build --build-arg PYTHON=3.11 -t $IMAGE_NAME:${{ steps.vars.outputs.sha_short }} .

    # 4. Push
    - name: Push image
      run: docker push $IMAGE_NAME:${{ steps.vars.outputs.sha_short }}

    # 5. Install Cosign
    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.5.0   # versión actual
      with:
        cosign-release: 'v2.2.4'          # versión actual

    # 6. Sign (keyless)
    - name: Cosign keyless sign
      env:
        COSIGN_EXPERIMENTAL: "true"
      run: cosign sign --yes $IMAGE_NAME:${{ steps.vars.outputs.sha_short }}

    # 7. Verify (sanity check)
    - name: Cosign verify
      env:
        COSIGN_EXPERIMENTAL: "true"
      run: cosign verify $IMAGE_NAME:${{ steps.vars.outputs.sha_short }}

    # 8. Generate SBOM
    - name: Generate SBOM (Syft)
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh \
        | sh -s -- -b /usr/local/bin v0.93.0
        syft $IMAGE_NAME:${{ steps.vars.outputs.sha_short }} -o spdx-json=sbom.spdx.json

    # 9. Upload artefactos (firma + SBOM)
    - uses: actions/upload-artifact@v4
      with:
        name: image-signature-and-sbom
        path: |
          *.sig
          sbom.spdx.json
